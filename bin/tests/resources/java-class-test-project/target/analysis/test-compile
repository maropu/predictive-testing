format version: 5
output mode:
1 items
0 -> single
output directories:
1 items
output dir -> /Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/target/scala-2.12/test-classes
compile options:
3 items
0 -> -unchecked
1 -> -deprecation
2 -> -feature
javac options:
12 items
00 -> -source
01 -> 1.8
02 -> -target
03 -> 1.8
04 -> -Xlint:all,-serial,-path
05 -> -g
06 -> -target
07 -> 1.8
08 -> -source
09 -> 1.8
10 -> -encoding
11 -> UTF-8
compiler version:
1 items
0 -> 2.12.10
compile order:
1 items
0 -> Mixed
name hashing:
1 items
0 -> true
products:
2 items
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> /Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/target/scala-2.12/test-classes/io/github/maropu/MainClassSuite.class
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> /Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/target/scala-2.12/test-classes/io/github/maropu/TestClassSuite.class
binary dependencies:
8 items
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> /Users/maropu/.m2/repository/org/scala-lang/scala-library/2.12.10/scala-library-2.12.10.jar
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> /Users/maropu/.m2/repository/org/scalactic/scalactic_2.12/3.2.9/scalactic_2.12-3.2.9.jar
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> /Users/maropu/.m2/repository/org/scalatest/scalatest-core_2.12/3.2.9/scalatest-core_2.12-3.2.9.jar
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> /Users/maropu/.m2/repository/org/scalatest/scalatest-funsuite_2.12/3.2.9/scalatest-funsuite_2.12-3.2.9.jar
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> /Users/maropu/.m2/repository/org/scala-lang/scala-library/2.12.10/scala-library-2.12.10.jar
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> /Users/maropu/.m2/repository/org/scalactic/scalactic_2.12/3.2.9/scalactic_2.12-3.2.9.jar
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> /Users/maropu/.m2/repository/org/scalatest/scalatest-core_2.12/3.2.9/scalatest-core_2.12-3.2.9.jar
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> /Users/maropu/.m2/repository/org/scalatest/scalatest-funsuite_2.12/3.2.9/scalatest-funsuite_2.12-3.2.9.jar
direct source dependencies:
0 items
direct external dependencies:
0 items
public inherited source dependencies:
0 items
public inherited external dependencies:
0 items
member reference internal dependencies:
0 items
member reference external dependencies:
3 items
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> io.github.maropu.MainClass$
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> io.github.maropu.TestClassA
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> io.github.maropu.TestClassB
inheritance internal dependencies:
0 items
inheritance external dependencies:
0 items
class names:
2 items
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> io.github.maropu.MainClassSuite
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> io.github.maropu.TestClassSuite
used names:
97 items
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> $org_scalatest_assert_macro_expr
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> $org_scalatest_assert_macro_left
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> $org_scalatest_assert_macro_right
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> <byname>
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> <init>
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> <repeated>
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> ===
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> A
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> Any
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> AnyFunSuite
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> Assertion
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> Assertions
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> AssertionsHelper
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> Bool
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> Boolean
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> Equality
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> Equalizer
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> Int
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> MainClass
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> MainClassSuite
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> Nothing
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> Position
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> Predef
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> Prettifier
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> String
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> Suite
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> T
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> Tag
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> Unit
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> assert
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> assertionsHelper
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> binaryMacroBool
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> convertToEqualizer
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> default
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> func
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> funsuite
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> github
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> here
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> io
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> macroAssert
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> maropu
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> org
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> package
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> scalactic
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> scalatest
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> source
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> test
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> $org_scalatest_assert_macro_expr
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> $org_scalatest_assert_macro_left
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> $org_scalatest_assert_macro_right
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> +
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> <byname>
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> <init>
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> <repeated>
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> ===
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> A
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> Any
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> AnyFunSuite
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> Assertion
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> Assertions
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> AssertionsHelper
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> Bool
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> Boolean
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> Equality
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> Equalizer
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> Int
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> Nothing
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> Position
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> Predef
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> Prettifier
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> String
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> T
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> Tag
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> TestClassA
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> TestClassB
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> TestClassSuite
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> Unit
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> assert
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> assertionsHelper
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> binaryMacroBool
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> c1
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> c2
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> convertToEqualizer
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> default
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> func
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> funsuite
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> github
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> here
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> io
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> macroAssert
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> maropu
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> org
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> package
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> scalactic
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> scalatest
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> source
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> test
product stamps:
2 items
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/target/scala-2.12/test-classes/io/github/maropu/MainClassSuite.class -> lastModified(1630289751000)
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/target/scala-2.12/test-classes/io/github/maropu/TestClassSuite.class -> lastModified(1630289751000)
source stamps:
2 items
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> hash(c41f6ed61018a462406bad040735178d6870f63e)
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> hash(f39a971a1ab3dfcd1529480ccfe0c594f1ed6c1f)
binary stamps:
4 items
/Users/maropu/.m2/repository/org/scala-lang/scala-library/2.12.10/scala-library-2.12.10.jar -> lastModified(1624372254000)
/Users/maropu/.m2/repository/org/scalactic/scalactic_2.12/3.2.9/scalactic_2.12-3.2.9.jar -> lastModified(1625278326000)
/Users/maropu/.m2/repository/org/scalatest/scalatest-core_2.12/3.2.9/scalatest-core_2.12-3.2.9.jar -> lastModified(1624413794000)
/Users/maropu/.m2/repository/org/scalatest/scalatest-funsuite_2.12/3.2.9/scalatest-funsuite_2.12-3.2.9.jar -> lastModified(1625278326000)
class names:
4 items
/Users/maropu/.m2/repository/org/scala-lang/scala-library/2.12.10/scala-library-2.12.10.jar -> scala.Int
/Users/maropu/.m2/repository/org/scalactic/scalactic_2.12/3.2.9/scalactic_2.12-3.2.9.jar -> org.scalactic.Bool$
/Users/maropu/.m2/repository/org/scalatest/scalatest-core_2.12/3.2.9/scalatest-core_2.12-3.2.9.jar -> org.scalatest.Tag
/Users/maropu/.m2/repository/org/scalatest/scalatest-funsuite_2.12/3.2.9/scalatest-funsuite_2.12-3.2.9.jar -> org.scalatest.funsuite.AnyFunSuite
internal apis:
2 items
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwMV+xawAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAJzcgAgeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2hbDvUidjhXzwIAAkkABGhhc2hMAARuYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7eHBHHhdTdAAVdW5jb25zdHJhaW5lZEVxdWFsaXR5c3EAfgALiBH6nnQAEmNvbnZlcnRUb0VxdWFsaXplcnVxAH4ACQAAAF1zcQB+AAt8HBqadAAGYXNzZXJ0c3EAfgALJHRHenQAB3N1Y2NlZWRzcQB+AAutp9bldAAGbm90aWZ5c3EAfgALYWbwSHQAJmxvd1ByaW9yaXR5Q29udmVyc2lvbkNoZWNrZWRDb25zdHJhaW50c3EAfgALHqbf2nQABmNhbmNlbHNxAH4AC0+ppv10AAR0ZXN0c3EAfgALsJNkwXQAEWV4ZWN1dGUkZGVmYXVsdCQyc3EAfgALAyehO3QACWludGVyY2VwdHNxAH4AC+EIptp0AARmYWlsc3EAfgALr2QsdnQABG5hbWVzcQB+AAuQhhXQdAAUYXNzZXJ0RG9lc05vdENvbXBpbGVzcQB+AAuM9jKqdAARZXhlY3V0ZSRkZWZhdWx0JDRzcQB+AAumMIwkdAAHZXhlY3V0ZXNxAH4AC6zYcpJ0AAR3YWl0c3EAfgAL0SEBl3QAC3Rlc3REYXRhRm9yc3EAfgALix8GOXQAE2NyZWF0ZUNhdGNoUmVwb3J0ZXJzcQB+AAvE/K/xdAAJc3R5bGVOYW1lc3EAfgALyv/P63QADk1haW5DbGFzc1N1aXRlc3EAfgAL7BSRf3QADSRhc0luc3RhbmNlT2ZzcQB+AAswGg4cdAARZXhlY3V0ZSRkZWZhdWx0JDNzcQB+AAuDkkWxdAAJY29uZmlnTWFwc3EAfgAL7gtwrXQABmVxdWFsc3NxAH4ACxF9H0R0ACxjb252ZXJ0RXF1aXZhbGVuY2VUb0FUb0JDb252ZXJzaW9uQ29uc3RyYWludHNxAH4AC30s9EV0AA9kZWZhdWx0RXF1YWxpdHlzcQB+AAsVnht6dAAiY29udmVydEVxdWl2YWxlbmNlVG9BVG9CQ29uc3RyYWludHNxAH4AC0r5Y250AAR0YWdzc3EAfgAL0oAtXHQADGFzSW5zdGFuY2VPZnNxAH4AC+7QlGx0AAVhbGVydHNxAH4AC/IS28l0AANydW5zcQB+AAt3QW3WdAAGc2NvcGVzc3EAfgALTYE2p3QAA3Bvc3NxAH4AC++/ZOB0AAxzeW5jaHJvbml6ZWRzcQB+AAtqSfyCdAAOYXNzZXJ0Q29tcGlsZXNzcQB+AAscBDvjdAAMYXNzZXJ0VGhyb3dzc3EAfgALMrVNl3QADSRpc0luc3RhbmNlT2ZzcQB+AAscUPRwdAAVdGVzdERhdGFGb3IkZGVmYXVsdCQyc3EAfgALJSjw+3QADGFzc2VydFJlc3VsdHNxAH4AC1Thsz10AAR0ZXh0c3EAfgALiM/1JnQALGNvbnZlcnRFcXVpdmFsZW5jZVRvQlRvQUNvbnZlcnNpb25Db25zdHJhaW50c3EAfgALzmTa5HQAEWV4ZWN1dGUkZGVmYXVsdCQ3c3EAfgAL+a2/2XQAFXR5cGVDaGVja2VkQ29uc3RyYWludHNxAH4ACzL9c8t0AAMhPT1zcQB+AAumlZQpdAAEaW5mb3NxAH4AC5bZxYV0AAlub3RpZnlBbGxzcQB+AAudH1mOdAALd2l0aEZpeHR1cmVzcQB+AAtoVwYVdAAHcnVuVGVzdHNxAH4ACy7fJ/N0AAxpc0luc3RhbmNlT2ZzcQB+AAsqC8gQdAAId2l0aENsdWVzcQB+AAuEgRw+dAARZXhlY3V0ZSRkZWZhdWx0JDZzcQB+AAvdkJWsdAAPYXNzZXJ0VHlwZUVycm9yc3EAfgALN4wOq3QABm1hcmt1cHNxAH4AC75XYZd0AAhsZWZ0U2lkZXNxAH4ACxhZYrJ0AAY8aW5pdD5zcQB+AAvtxb91dAAPcnVuTmVzdGVkU3VpdGVzc3EAfgALtxtstHQABWFwcGx5c3EAfgAL7PdgoXQACUVxdWFsaXplcnNxAH4ACyJhF2h0ABtuZXdBc3NlcnRpb25GYWlsZWRFeGNlcHRpb25zcQB+AAudO77GdAAEbm90ZXNxAH4AC1MehhV0AAI9PXNxAH4AC4a+KYN0AAVjbG9uZXNxAH4AC+vAT+B0AAxuZXN0ZWRTdWl0ZXNzcQB+AAsgaltsdAAGYXNzdW1lc3EAfgALMlnMSHQABiRpbml0JHNxAH4AC9ctaIB0ACBsb3dQcmlvcml0eVR5cGVDaGVja2VkQ29uc3RyYWludHNxAH4AC0ELM0d0AAxyZWdpc3RlclRlc3RzcQB+AAvYyBetdAARZXhlY3V0ZSRkZWZhdWx0JDVzcQB+AAs2ln4ydAADPT09c3EAfgALTtxX2nQAGG5ld1Rlc3RDYW5jZWxlZEV4Y2VwdGlvbnNxAH4AC9Wz1Z10AAh0b1N0cmluZ3NxAH4ACwgW6uF0AAl0ZXN0TmFtZXNzcQB+AAuVshRydAARZXhlY3V0ZSRkZWZhdWx0JDFzcQB+AAsSvOJOdAACIT1zcQB+AAtUyUpUdAAIZ2V0Q2xhc3NzcQB+AAvjWemcdAATcmVnaXN0ZXJJZ25vcmVkVGVzdHNxAH4AC/XAzhZ0AAh0ZXN0c0ZvcnNxAH4AC1Tcb5p0AAhydW5UZXN0c3NxAH4AC2zB1gh0ABFwZW5kaW5nVW50aWxGaXhlZHNxAH4ACyL7q8V0ABFleHBlY3RlZFRlc3RDb3VudHNxAH4AC+LyrSN0AAhyZXJ1bm5lcnNxAH4AC1FDx0N0ACJjb252ZXJ0RXF1aXZhbGVuY2VUb0JUb0FDb25zdHJhaW50c3EAfgAL1LaYcHQAAm5lc3EAfgALn8A69XQAEUNoZWNraW5nRXF1YWxpemVyc3EAfgALwWeJfnQAB3BlbmRpbmdzcQB+AAvL2BxNdAAGaWdub3Jlc3EAfgALtSGDEnQAAmVxc3EAfgALLForbXQAGmNvbnZlcnRUb0NoZWNraW5nRXF1YWxpemVyc3EAfgALhS4zc3QACU5vQXJnVGVzdHNxAH4AC9Xjw8Z0AAIjI3NxAH4ACyv8aLd0AAhmaW5hbGl6ZXNxAH4ACw9AnLh0ABtjb252ZXJzaW9uQ2hlY2tlZENvbnN0cmFpbnRzcQB+AAtMmvrZdAAIaGFzaENvZGVzcQB+AAsWytaVdAAHc3VpdGVJZHNxAH4AC/126290AAlzdWl0ZU5hbWVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgDVeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADHhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAdAAfaW8uZ2l0aHViLm1hcm9wdS5NYWluQ2xhc3NTdWl0ZXVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQACENsYXNzRGVmdXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAA3QAJ3NjYWxhLnJlZmxlY3QubWFjcm9zLmludGVybmFsLm1hY3JvSW1wbHQAEHNjYWxhLmRlcHJlY2F0ZWR0AAxzY2FsYS5uYXRpdmVzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4A8HNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgDVTAAJaW5oZXJpdGVkcQB+ANVMAAdwYXJlbnRzcQB+ANV4cQB+APVzcQB+APB1cQB+ANAAAAAAc3EAfgDwdXEAfgDQAAAAAHNxAH4A8HVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAAQc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgAMTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4A9HQAC0FueUZ1blN1aXRlc3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgD0c3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAAEc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADHhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AANvcmdzcQB+AQ10AAlzY2FsYXRlc3RzcQB+AQ10AAhmdW5zdWl0ZXNyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgEOc3EAfgEBdAAPQW55RnVuU3VpdGVMaWtlcQB+AQdzcQB+AQF0AAtEb2N1bWVudGluZ3NxAH4BBXNxAH4BCHVxAH4BCwAAAANzcQB+AQ10AANvcmdzcQB+AQ10AAlzY2FsYXRlc3RxAH4BFnNxAH4BAXQACEFsZXJ0aW5ncQB+ARtzcQB+AQF0AAlOb3RpZnlpbmdxAH4BG3NxAH4BAXQACUluZm9ybWluZ3EAfgEbc3EAfgEBdAAQVGVzdFJlZ2lzdHJhdGlvbnEAfgEbc3EAfgEBdAAJVGVzdFN1aXRlcQB+ARtzcQB+AQF0AAVTdWl0ZXEAfgEbc3EAfgEBdAAMU2VyaWFsaXphYmxlc3EAfgEFc3EAfgEIdXEAfgELAAAAAnNxAH4BDXQABXNjYWxhcQB+ARZzcQB+AQFxAH4BL3NxAH4BBXNxAH4BCHVxAH4BCwAAAANzcQB+AQ10AARqYXZhc3EAfgENdAACaW9xAH4BFnNxAH4BAXQACkFzc2VydGlvbnNxAH4BG3NxAH4BAXQADFRyaXBsZUVxdWFsc3NxAH4BBXNxAH4BCHVxAH4BCwAAAANzcQB+AQ10AANvcmdzcQB+AQ10AAlzY2FsYWN0aWNxAH4BFnNxAH4BAXQAE1RyaXBsZUVxdWFsc1N1cHBvcnRxAH4BQXNxAH4BAXQABk9iamVjdHNxAH4BBXNxAH4BCHVxAH4BCwAAAANzcQB+AQ1xAH4BOnNxAH4BDXQABGxhbmdxAH4BFnNxAH4BAXQAA0FueXEAfgEwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAANzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADHhwdAAQaW8uZ2l0aHViLm1hcm9wdXNxAH4BVnQAAmlvc3EAfgFWdAAJaW8uZ2l0aHVic3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAF7lNdstHVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADEwAD3NvdXJjZURpcmVjdG9yeXEAfgAMeHB0AHgvVXNlcnMvbWFyb3B1L1JlcG9zaXRvcmllcy9wcmVkaWN0aXZlLXRlc3RpbmcvYmluL3Rlc3RzL3Jlc291cmNlcy9qYXZhLWNsYXNzLXRlc3QtcHJvamVjdC90YXJnZXQvc2NhbGEtMi4xMi90ZXN0LWNsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABTEH27WEBikYkBrrQQHNReNaHD2Pg==
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwSyyTaQAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAJzcgAgeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2hbDvUidjhXzwIAAkkABGhhc2hMAARuYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7eHAFgP36dAAVdW5jb25zdHJhaW5lZEVxdWFsaXR5c3EAfgALEIX6aHQAEmNvbnZlcnRUb0VxdWFsaXplcnVxAH4ACQAAAF1zcQB+AAtwYrALdAAGYXNzZXJ0c3EAfgALjjGSLnQAB3N1Y2NlZWRzcQB+AAtsV/YcdAAGbm90aWZ5c3EAfgAL1K+/lHQAJmxvd1ByaW9yaXR5Q29udmVyc2lvbkNoZWNrZWRDb25zdHJhaW50c3EAfgAL4Vocn3QABmNhbmNlbHNxAH4ACweklZd0AAR0ZXN0c3EAfgALOqJERnQAEWV4ZWN1dGUkZGVmYXVsdCQyc3EAfgALfAz5A3QACWludGVyY2VwdHNxAH4AC8JJYXJ0AARmYWlsc3EAfgALV1DRZ3QABG5hbWVzcQB+AAtS53wRdAAUYXNzZXJ0RG9lc05vdENvbXBpbGVzcQB+AAsT9x0VdAARZXhlY3V0ZSRkZWZhdWx0JDRzcQB+AAvBwMS2dAAHZXhlY3V0ZXNxAH4AC4upHQl0AAR3YWl0c3EAfgALozgNKHQAC3Rlc3REYXRhRm9yc3EAfgALksus8HQAE2NyZWF0ZUNhdGNoUmVwb3J0ZXJzcQB+AAuefqyYdAAJc3R5bGVOYW1lc3EAfgALnuzwonQADSRhc0luc3RhbmNlT2ZzcQB+AAtMVlcUdAARZXhlY3V0ZSRkZWZhdWx0JDNzcQB+AAuNLy2YdAAJY29uZmlnTWFwc3EAfgAL0ILeZ3QABmVxdWFsc3NxAH4AC944tkh0AA5UZXN0Q2xhc3NTdWl0ZXNxAH4AC4Zm5RZ0ACxjb252ZXJ0RXF1aXZhbGVuY2VUb0FUb0JDb252ZXJzaW9uQ29uc3RyYWludHNxAH4AC+uKwXV0AA9kZWZhdWx0RXF1YWxpdHlzcQB+AAvu9HFgdAAiY29udmVydEVxdWl2YWxlbmNlVG9BVG9CQ29uc3RyYWludHNxAH4ACw/5hoB0AAR0YWdzc3EAfgALeqPiMXQADGFzSW5zdGFuY2VPZnNxAH4AC1+Dy1R0AAVhbGVydHNxAH4AC34gA150AANydW5zcQB+AAsYQRUIdAAGc2NvcGVzc3EAfgALFvDVM3QAA3Bvc3NxAH4AC0biqt10AAxzeW5jaHJvbml6ZWRzcQB+AAtFKFhtdAAOYXNzZXJ0Q29tcGlsZXNzcQB+AAsve5iWdAAMYXNzZXJ0VGhyb3dzc3EAfgALM6m0C3QADSRpc0luc3RhbmNlT2ZzcQB+AAswKekzdAAVdGVzdERhdGFGb3IkZGVmYXVsdCQyc3EAfgALkzqcHHQADGFzc2VydFJlc3VsdHNxAH4AC1QBW0h0AAR0ZXh0c3EAfgALUdz6PHQALGNvbnZlcnRFcXVpdmFsZW5jZVRvQlRvQUNvbnZlcnNpb25Db25zdHJhaW50c3EAfgAL5yInpXQAEWV4ZWN1dGUkZGVmYXVsdCQ3c3EAfgALNtzm4XQAFXR5cGVDaGVja2VkQ29uc3RyYWludHNxAH4AC0AAvtx0AAMhPT1zcQB+AAvTJoeNdAAEaW5mb3NxAH4ACxe1J7Z0AAlub3RpZnlBbGxzcQB+AAv1SsUBdAALd2l0aEZpeHR1cmVzcQB+AAtmNXakdAAHcnVuVGVzdHNxAH4AC5m/Y/h0AAxpc0luc3RhbmNlT2ZzcQB+AAuCSihRdAAId2l0aENsdWVzcQB+AAtRrmuhdAARZXhlY3V0ZSRkZWZhdWx0JDZzcQB+AAsOEZ/5dAAPYXNzZXJ0VHlwZUVycm9yc3EAfgALum4yPnQABm1hcmt1cHNxAH4ACx3XqBp0AAhsZWZ0U2lkZXNxAH4ACxItArZ0AAY8aW5pdD5zcQB+AAtJ3VVpdAAPcnVuTmVzdGVkU3VpdGVzc3EAfgALA/MrpHQABWFwcGx5c3EAfgAL7OaQkXQACUVxdWFsaXplcnNxAH4AC2s4kvZ0ABtuZXdBc3NlcnRpb25GYWlsZWRFeGNlcHRpb25zcQB+AAvYkiRydAAEbm90ZXNxAH4AC2HHvNN0AAI9PXNxAH4AC0KXtvZ0AAVjbG9uZXNxAH4AC5VkYAR0AAxuZXN0ZWRTdWl0ZXNzcQB+AAuM7aGGdAAGYXNzdW1lc3EAfgALKeCS3nQABiRpbml0JHNxAH4AC04L9Ul0ACBsb3dQcmlvcml0eVR5cGVDaGVja2VkQ29uc3RyYWludHNxAH4AC+ufv8Z0AAxyZWdpc3RlclRlc3RzcQB+AAvx2pxydAARZXhlY3V0ZSRkZWZhdWx0JDVzcQB+AAvqfnP9dAADPT09c3EAfgALsQut9XQAGG5ld1Rlc3RDYW5jZWxlZEV4Y2VwdGlvbnNxAH4ACzunoCV0AAh0b1N0cmluZ3NxAH4AC0I5nzx0AAl0ZXN0TmFtZXNzcQB+AAtgQNPIdAARZXhlY3V0ZSRkZWZhdWx0JDFzcQB+AAuex1WxdAACIT1zcQB+AAsrPDGodAAIZ2V0Q2xhc3NzcQB+AAsixBWUdAATcmVnaXN0ZXJJZ25vcmVkVGVzdHNxAH4AC265RS10AAh0ZXN0c0ZvcnNxAH4AC8256Ax0AAhydW5UZXN0c3NxAH4ACx7aiHZ0ABFwZW5kaW5nVW50aWxGaXhlZHNxAH4AC7XUpOV0ABFleHBlY3RlZFRlc3RDb3VudHNxAH4AC8HXViB0AAhyZXJ1bm5lcnNxAH4AC0Oh9od0ACJjb252ZXJ0RXF1aXZhbGVuY2VUb0JUb0FDb25zdHJhaW50c3EAfgALAg9j3HQAAm5lc3EAfgALlulEcnQAEUNoZWNraW5nRXF1YWxpemVyc3EAfgAL4YRYrnQAB3BlbmRpbmdzcQB+AAtohr45dAAGaWdub3Jlc3EAfgALw/B0b3QAAmVxc3EAfgALJzOo5HQAGmNvbnZlcnRUb0NoZWNraW5nRXF1YWxpemVyc3EAfgALhoM/W3QACU5vQXJnVGVzdHNxAH4ACw+CkIB0AAIjI3NxAH4AC0WpbcN0AAhmaW5hbGl6ZXNxAH4AC1B1oPR0ABtjb252ZXJzaW9uQ2hlY2tlZENvbnN0cmFpbnRzcQB+AAtm8WYXdAAIaGFzaENvZGVzcQB+AAsTVsPRdAAHc3VpdGVJZHNxAH4AC+ecEdJ0AAlzdWl0ZU5hbWVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgDVeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADHhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAdAAfaW8uZ2l0aHViLm1hcm9wdS5UZXN0Q2xhc3NTdWl0ZXVyABpbTHhzYnRpLmFwaS5UeXBlUGFyYW1ldGVyO9ltJg8onfK2AgAAeHAAAAAAfnIAGHhzYnRpLmFwaS5EZWZpbml0aW9uVHlwZQAAAAAAAAAAEgAAeHIADmphdmEubGFuZy5FbnVtAAAAAAAAAAASAAB4cHQACENsYXNzRGVmdXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAA3QAJ3NjYWxhLnJlZmxlY3QubWFjcm9zLmludGVybmFsLm1hY3JvSW1wbHQAEHNjYWxhLmRlcHJlY2F0ZWR0AAxzY2FsYS5uYXRpdmVzcgAheHNidGkuYXBpLkFic3RyYWN0TGF6eSRTdHJpY3RMYXp5DWYcaykWKrgCAAFMAAV2YWx1ZXQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwc3IAE3hzYnRpLmFwaS5FbXB0eVR5cGW8/Z5GSTuJJAIAAHhyABR4c2J0aS5hcGkuU2ltcGxlVHlwZXJ4YoghI79AAgAAeHIADnhzYnRpLmFwaS5UeXBlP2rZIRZJqsoCAAB4cHNxAH4A8HNyABN4c2J0aS5hcGkuU3RydWN0dXJlqar5gJNv2AACAANMAAhkZWNsYXJlZHEAfgDVTAAJaW5oZXJpdGVkcQB+ANVMAAdwYXJlbnRzcQB+ANV4cQB+APVzcQB+APB1cQB+ANAAAAAAc3EAfgDwdXEAfgDQAAAAAHNxAH4A8HVyABFbTHhzYnRpLmFwaS5UeXBlO3T/pVp7+elBAgAAeHAAAAAQc3IAFHhzYnRpLmFwaS5Qcm9qZWN0aW9u89KNVOlFpC0CAAJMAAJpZHEAfgAMTAAGcHJlZml4dAAWTHhzYnRpL2FwaS9TaW1wbGVUeXBlO3hxAH4A9HQAC0FueUZ1blN1aXRlc3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgD0c3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAAEc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADHhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AANvcmdzcQB+AQ10AAlzY2FsYXRlc3RzcQB+AQ10AAhmdW5zdWl0ZXNyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgEOc3EAfgEBdAAPQW55RnVuU3VpdGVMaWtlcQB+AQdzcQB+AQF0AAtEb2N1bWVudGluZ3NxAH4BBXNxAH4BCHVxAH4BCwAAAANzcQB+AQ10AANvcmdzcQB+AQ10AAlzY2FsYXRlc3RxAH4BFnNxAH4BAXQACEFsZXJ0aW5ncQB+ARtzcQB+AQF0AAlOb3RpZnlpbmdxAH4BG3NxAH4BAXQACUluZm9ybWluZ3EAfgEbc3EAfgEBdAAQVGVzdFJlZ2lzdHJhdGlvbnEAfgEbc3EAfgEBdAAJVGVzdFN1aXRlcQB+ARtzcQB+AQF0AAVTdWl0ZXEAfgEbc3EAfgEBdAAMU2VyaWFsaXphYmxlc3EAfgEFc3EAfgEIdXEAfgELAAAAAnNxAH4BDXQABXNjYWxhcQB+ARZzcQB+AQFxAH4BL3NxAH4BBXNxAH4BCHVxAH4BCwAAAANzcQB+AQ10AARqYXZhc3EAfgENdAACaW9xAH4BFnNxAH4BAXQACkFzc2VydGlvbnNxAH4BG3NxAH4BAXQADFRyaXBsZUVxdWFsc3NxAH4BBXNxAH4BCHVxAH4BCwAAAANzcQB+AQ10AANvcmdzcQB+AQ10AAlzY2FsYWN0aWNxAH4BFnNxAH4BAXQAE1RyaXBsZUVxdWFsc1N1cHBvcnRxAH4BQXNxAH4BAXQABk9iamVjdHNxAH4BBXNxAH4BCHVxAH4BCwAAAANzcQB+AQ1xAH4BOnNxAH4BDXQABGxhbmdxAH4BFnNxAH4BAXQAA0FueXEAfgEwdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAANzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADHhwdAAQaW8uZ2l0aHViLm1hcm9wdXNxAH4BVnQAAmlvc3EAfgFWdAAJaW8uZ2l0aHVic3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAF7lNdstHVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADEwAD3NvdXJjZURpcmVjdG9yeXEAfgAMeHB0AHgvVXNlcnMvbWFyb3B1L1JlcG9zaXRvcmllcy9wcmVkaWN0aXZlLXRlc3RpbmcvYmluL3Rlc3RzL3Jlc291cmNlcy9qYXZhLWNsYXNzLXRlc3QtcHJvamVjdC90YXJnZXQvc2NhbGEtMi4xMi90ZXN0LWNsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABTzmpcaGrPfzRUpSAzP4MWU8e1sHw==
external apis:
3 items
io.github.maropu.MainClass$ -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhw3dKaswAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAVc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hw4JvSrXQABm5vdGlmeXNxAH4ADI3po1x0AAR3YWl0c3EAfgAMjRV933QADSRhc0luc3RhbmNlT2ZzcQB+AAwh8GCKdAAJTWFpbkNsYXNzc3EAfgAM+R2mZXQABmVxdWFsc3NxAH4ADNY08Yt0AAxhc0luc3RhbmNlT2ZzcQB+AAyoepB2dAAMc3luY2hyb25pemVkc3EAfgAM68HSSnQADSRpc0luc3RhbmNlT2ZzcQB+AAzavHsZdAAJbm90aWZ5QWxsc3EAfgAMMR6v9XQADGlzSW5zdGFuY2VPZnNxAH4ADCnUtkJ0AAI9PXNxAH4ADFd3kUh0AAVjbG9uZXNxAH4ADMKV8IB0AARmdW5jc3EAfgAMdckLpXQACHRvU3RyaW5nc3EAfgAMzmdTc3QAAiE9c3EAfgAMDnrUuHQACGdldENsYXNzc3EAfgAMPJfRGHQAAm5lc3EAfgAMVACXyHQAAmVxc3EAfgAMksdqSnQAAiMjc3EAfgAM9KBe9XQACGZpbmFsaXplc3EAfgAMwuJce3QACGhhc2hDb2Rlc3IAE3hzYnRpLmFwaS5Tb3VyY2VBUEm5Xqf5KSM4pAIAAlsAC2RlZmluaXRpb25zdAAXW0x4c2J0aS9hcGkvRGVmaW5pdGlvbjtbAAhwYWNrYWdlc3QAFFtMeHNidGkvYXBpL1BhY2thZ2U7eHB1cgAXW0x4c2J0aS5hcGkuRGVmaW5pdGlvbjuIyVzntONeDgIAAHhwAAAAAXNyABN4c2J0aS5hcGkuQ2xhc3NMaWtlgzQcod+wl2wCAARMAA5kZWZpbml0aW9uVHlwZXQAGkx4c2J0aS9hcGkvRGVmaW5pdGlvblR5cGU7WwAQc2F2ZWRBbm5vdGF0aW9uc3QAE1tMamF2YS9sYW5nL1N0cmluZztMAAhzZWxmVHlwZXQAEEx4c2J0aS9hcGkvTGF6eTtMAAlzdHJ1Y3R1cmVxAH4AQXhyACF4c2J0aS5hcGkuUGFyYW1ldGVyaXplZERlZmluaXRpb275EW6x1VA84gIAAVsADnR5cGVQYXJhbWV0ZXJzdAAaW0x4c2J0aS9hcGkvVHlwZVBhcmFtZXRlcjt4cgAUeHNidGkuYXBpLkRlZmluaXRpb26HKhvocULjRgIABEwABmFjY2Vzc3QAEkx4c2J0aS9hcGkvQWNjZXNzO1sAC2Fubm90YXRpb25zdAAXW0x4c2J0aS9hcGkvQW5ub3RhdGlvbjtMAAltb2RpZmllcnN0ABVMeHNidGkvYXBpL01vZGlmaWVycztMAARuYW1lcQB+AA14cHNyABB4c2J0aS5hcGkuUHVibGljulg9rmwtYEICAAB4cgAQeHNidGkuYXBpLkFjY2Vzc91imvgdYzFIAgAAeHB1cgAXW0x4c2J0aS5hcGkuQW5ub3RhdGlvbjvrl+sZEPaNSAIAAHhwAAAAAHNyABN4c2J0aS5hcGkuTW9kaWZpZXJzl+dh3BMme7MCAAFCAAVmbGFnc3hwAHQAGmlvLmdpdGh1Yi5tYXJvcHUuTWFpbkNsYXNzdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAGTW9kdWxldXIAE1tMamF2YS5sYW5nLlN0cmluZzut0lbn6R17RwIAAHhwAAAAAXQADHNjYWxhLm5hdGl2ZXNyACF4c2J0aS5hcGkuQWJzdHJhY3RMYXp5JFN0cmljdExhenkNZhxrKRYquAIAAUwABXZhbHVldAASTGphdmEvbGFuZy9PYmplY3Q7eHBzcgATeHNidGkuYXBpLkVtcHR5VHlwZbz9nkZJO4kkAgAAeHIAFHhzYnRpLmFwaS5TaW1wbGVUeXBlcnhiiCEjv0ACAAB4cgAOeHNidGkuYXBpLlR5cGU/atkhFkmqygIAAHhwc3EAfgBac3IAE3hzYnRpLmFwaS5TdHJ1Y3R1cmWpqvmAk2/YAAIAA0wACGRlY2xhcmVkcQB+AEFMAAlpbmhlcml0ZWRxAH4AQUwAB3BhcmVudHNxAH4AQXhxAH4AX3NxAH4AWnVxAH4APAAAAABzcQB+AFp1cQB+ADwAAAAAc3EAfgBadXIAEVtMeHNidGkuYXBpLlR5cGU7dP+lWnv56UECAAB4cAAAAAJzcgAUeHNidGkuYXBpLlByb2plY3Rpb27z0o1U6UWkLQIAAkwAAmlkcQB+AA1MAAZwcmVmaXh0ABZMeHNidGkvYXBpL1NpbXBsZVR5cGU7eHEAfgBedAAGT2JqZWN0c3IAE3hzYnRpLmFwaS5TaW5nbGV0b278p1/4z1bkRgIAAUwABHBhdGh0ABBMeHNidGkvYXBpL1BhdGg7eHEAfgBec3IADnhzYnRpLmFwaS5QYXRomz1cCM6lJ4QCAAFbAApjb21wb25lbnRzdAAaW0x4c2J0aS9hcGkvUGF0aENvbXBvbmVudDt4cHVyABpbTHhzYnRpLmFwaS5QYXRoQ29tcG9uZW50O0PaCXQtZxZ0AgAAeHAAAAADc3IADHhzYnRpLmFwaS5JZJgybIs3U8RAAgABTAACaWRxAH4ADXhyABd4c2J0aS5hcGkuUGF0aENvbXBvbmVudF+aIlsuhp+8AgAAeHB0AARqYXZhc3EAfgB3dAAEbGFuZ3NyAA54c2J0aS5hcGkuVGhpc9sJ7abMWkBcAgAAeHEAfgB4c3EAfgBrdAADQW55c3EAfgBvc3EAfgBydXEAfgB1AAAAAnNxAH4Ad3QABXNjYWxhcQB+AH51cgAUW0x4c2J0aS5hcGkuUGFja2FnZTtbExk3cKcnoQIAAHhwAAAAA3NyABF4c2J0aS5hcGkuUGFja2FnZX5Zj/auzjlYAgABTAAEbmFtZXEAfgANeHB0ABBpby5naXRodWIubWFyb3B1c3EAfgCIdAACaW9zcQB+AIh0AAlpby5naXRodWJzcgAVeHNidGkuYXBpLkNvbXBpbGF0aW9u7frgw2rooEICAAJKAAlzdGFydFRpbWVbAAdvdXRwdXRzdAAaW0x4c2J0aS9hcGkvT3V0cHV0U2V0dGluZzt4cAAAAXuU12k4dXIAGltMeHNidGkuYXBpLk91dHB1dFNldHRpbmc7f2rC86eHpUICAAB4cAAAAAFzcgAXeHNidGkuYXBpLk91dHB1dFNldHRpbmd62ZpHdPsdewIAAkwAD291dHB1dERpcmVjdG9yeXEAfgANTAAPc291cmNlRGlyZWN0b3J5cQB+AA14cHQAcy9Vc2Vycy9tYXJvcHUvUmVwb3NpdG9yaWVzL3ByZWRpY3RpdmUtdGVzdGluZy9iaW4vdGVzdHMvcmVzb3VyY2VzL2phdmEtY2xhc3MtdGVzdC1wcm9qZWN0L3RhcmdldC9zY2FsYS0yLjEyL2NsYXNzZXN0AAEvdXIAAltCrPMX+AYIVOACAAB4cAAAABQ0q0zxFUwR9yrDTAo12KMQr5hGDg==
io.github.maropu.TestClassA -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhw7ODtawAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAWc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hwZ1SWvnQABm5vdGlmeXNxAH4ADBwBtJp0AAR3YWl0c3EAfgAMiGzV9HQADSRhc0luc3RhbmNlT2ZzcQB+AAwSliicdAAGZXF1YWxzc3EAfgAMpWl9NHQADGFzSW5zdGFuY2VPZnNxAH4ADI+ksFV0AAxzeW5jaHJvbml6ZWRzcQB+AAy4vZZkdAANJGlzSW5zdGFuY2VPZnNxAH4ADDjcx1h0AApUZXN0Q2xhc3NBc3EAfgAMMhgkD3QACW5vdGlmeUFsbHNxAH4ADE330v10AAxpc0luc3RhbmNlT2ZzcQB+AAzSZ/ZrdAAGPGluaXQ+c3EAfgAMtXF+bnQAAj09c3EAfgAMnJ4MTXQABWNsb25lc3EAfgAM9OuMGXQABGZ1bmNzcQB+AAzqKUpDdAAIdG9TdHJpbmdzcQB+AAycGkirdAACIT1zcQB+AAy7cUDHdAAIZ2V0Q2xhc3NzcQB+AAzvqd8ldAACbmVzcQB+AAyM9u2HdAACZXFzcQB+AAwSEHcFdAACIyNzcQB+AAywayXAdAAIZmluYWxpemVzcQB+AAzC8gTTdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBDeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAdAAbaW8uZ2l0aHViLm1hcm9wdS5UZXN0Q2xhc3NBdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAIQ2xhc3NEZWZ1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAABdAAMc2NhbGEubmF0aXZlc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AFxzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AQ0wACWluaGVyaXRlZHEAfgBDTAAHcGFyZW50c3EAfgBDeHEAfgBhc3EAfgBcdXEAfgA+AAAAAHNxAH4AXHVxAH4APgAAAABzcQB+AFx1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAA3NyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AGB0AAlCYXNlQ2xhc3NzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AGBzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAARzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQAAmlvc3EAfgB5dAAGZ2l0aHVic3EAfgB5dAAGbWFyb3B1c3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AHpzcQB+AG10AAZPYmplY3RzcQB+AHFzcQB+AHR1cQB+AHcAAAADc3EAfgB5dAAEamF2YXNxAH4AeXQABGxhbmdxAH4AgnNxAH4AbXQAA0FueXNxAH4AcXNxAH4AdHVxAH4AdwAAAAJzcQB+AHl0AAVzY2FsYXEAfgCCdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAANzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAQaW8uZ2l0aHViLm1hcm9wdXNxAH4AlXQAAmlvc3EAfgCVdAAJaW8uZ2l0aHVic3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAF7lNdpOHVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0AHMvVXNlcnMvbWFyb3B1L1JlcG9zaXRvcmllcy9wcmVkaWN0aXZlLXRlc3RpbmcvYmluL3Rlc3RzL3Jlc291cmNlcy9qYXZhLWNsYXNzLXRlc3QtcHJvamVjdC90YXJnZXQvc2NhbGEtMi4xMi9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUDjDa2LDTHw7t4Kx+U8RwzLYthWM=
io.github.maropu.TestClassB -> 
rO0ABXNyABB4c2J0aS5hcGkuU291cmNlSjH5SdlLSkQCAAdJAAdhcGlIYXNoWgAIaGFzTWFjcm9aABBoYXNQYWNrYWdlT2JqZWN0TAAYX2ludGVybmFsT25seV9uYW1lSGFzaGVzdAAkTHhzYnRpL2FwaS9faW50ZXJuYWxPbmx5X05hbWVIYXNoZXM7TAADYXBpdAAVTHhzYnRpL2FwaS9Tb3VyY2VBUEk7TAALY29tcGlsYXRpb250ABdMeHNidGkvYXBpL0NvbXBpbGF0aW9uO1sABGhhc2h0AAJbQnhwySzhXAAAc3IAInhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoZXNU2r6Z+tTsTAIAAlsAD2ltcGxpY2l0TWVtYmVyc3QAI1tMeHNidGkvYXBpL19pbnRlcm5hbE9ubHlfTmFtZUhhc2g7WwAOcmVndWxhck1lbWJlcnNxAH4AB3hwdXIAI1tMeHNidGkuYXBpLl9pbnRlcm5hbE9ubHlfTmFtZUhhc2g7SVqAtt2Wi/QCAAB4cAAAAAB1cQB+AAkAAAAWc3IAIHhzYnRpLmFwaS5faW50ZXJuYWxPbmx5X05hbWVIYXNoWw71InY4V88CAAJJAARoYXNoTAAEbmFtZXQAEkxqYXZhL2xhbmcvU3RyaW5nO3hw3HHfSnQABm5vdGlmeXNxAH4ADPFzCM50AAR3YWl0c3EAfgAMwWjIPnQADSRhc0luc3RhbmNlT2ZzcQB+AAyKDChpdAAKVGVzdENsYXNzQnNxAH4ADL0isRt0AAZlcXVhbHNzcQB+AAzbEbhGdAAMYXNJbnN0YW5jZU9mc3EAfgAMxDKUo3QADHN5bmNocm9uaXplZHNxAH4ADCRECSd0AA0kaXNJbnN0YW5jZU9mc3EAfgAMDLM4w3QACW5vdGlmeUFsbHNxAH4ADNr77Nt0AAxpc0luc3RhbmNlT2ZzcQB+AAzZAn0wdAAGPGluaXQ+c3EAfgAMHJWZ4XQAAj09c3EAfgAMxatUf3QABWNsb25lc3EAfgAMDXAhEXQABGZ1bmNzcQB+AAwrVbxddAAIdG9TdHJpbmdzcQB+AAy0Mcb7dAACIT1zcQB+AAyPCGctdAAIZ2V0Q2xhc3NzcQB+AAzx8HzTdAACbmVzcQB+AAzCXyTZdAACZXFzcQB+AAyTREo3dAACIyNzcQB+AAynH7tDdAAIZmluYWxpemVzcQB+AAxDq94kdAAIaGFzaENvZGVzcgATeHNidGkuYXBpLlNvdXJjZUFQSblep/kpIzikAgACWwALZGVmaW5pdGlvbnN0ABdbTHhzYnRpL2FwaS9EZWZpbml0aW9uO1sACHBhY2thZ2VzdAAUW0x4c2J0aS9hcGkvUGFja2FnZTt4cHVyABdbTHhzYnRpLmFwaS5EZWZpbml0aW9uO4jJXOe0414OAgAAeHAAAAABc3IAE3hzYnRpLmFwaS5DbGFzc0xpa2WDNByh37CXbAIABEwADmRlZmluaXRpb25UeXBldAAaTHhzYnRpL2FwaS9EZWZpbml0aW9uVHlwZTtbABBzYXZlZEFubm90YXRpb25zdAATW0xqYXZhL2xhbmcvU3RyaW5nO0wACHNlbGZUeXBldAAQTHhzYnRpL2FwaS9MYXp5O0wACXN0cnVjdHVyZXEAfgBDeHIAIXhzYnRpLmFwaS5QYXJhbWV0ZXJpemVkRGVmaW5pdGlvbvkRbrHVUDziAgABWwAOdHlwZVBhcmFtZXRlcnN0ABpbTHhzYnRpL2FwaS9UeXBlUGFyYW1ldGVyO3hyABR4c2J0aS5hcGkuRGVmaW5pdGlvbocqG+hxQuNGAgAETAAGYWNjZXNzdAASTHhzYnRpL2FwaS9BY2Nlc3M7WwALYW5ub3RhdGlvbnN0ABdbTHhzYnRpL2FwaS9Bbm5vdGF0aW9uO0wACW1vZGlmaWVyc3QAFUx4c2J0aS9hcGkvTW9kaWZpZXJzO0wABG5hbWVxAH4ADXhwc3IAEHhzYnRpLmFwaS5QdWJsaWO6WD2ubC1gQgIAAHhyABB4c2J0aS5hcGkuQWNjZXNz3WKa+B1jMUgCAAB4cHVyABdbTHhzYnRpLmFwaS5Bbm5vdGF0aW9uO+uX6xkQ9o1IAgAAeHAAAAAAc3IAE3hzYnRpLmFwaS5Nb2RpZmllcnOX52HcEyZ7swIAAUIABWZsYWdzeHAAdAAbaW8uZ2l0aHViLm1hcm9wdS5UZXN0Q2xhc3NCdXIAGltMeHNidGkuYXBpLlR5cGVQYXJhbWV0ZXI72W0mDyid8rYCAAB4cAAAAAB+cgAYeHNidGkuYXBpLkRlZmluaXRpb25UeXBlAAAAAAAAAAASAAB4cgAOamF2YS5sYW5nLkVudW0AAAAAAAAAABIAAHhwdAAIQ2xhc3NEZWZ1cgATW0xqYXZhLmxhbmcuU3RyaW5nO63SVufpHXtHAgAAeHAAAAABdAAMc2NhbGEubmF0aXZlc3IAIXhzYnRpLmFwaS5BYnN0cmFjdExhenkkU3RyaWN0TGF6eQ1mHGspFiq4AgABTAAFdmFsdWV0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyABN4c2J0aS5hcGkuRW1wdHlUeXBlvP2eRkk7iSQCAAB4cgAUeHNidGkuYXBpLlNpbXBsZVR5cGVyeGKIISO/QAIAAHhyAA54c2J0aS5hcGkuVHlwZT9q2SEWSarKAgAAeHBzcQB+AFxzcgATeHNidGkuYXBpLlN0cnVjdHVyZamq+YCTb9gAAgADTAAIZGVjbGFyZWRxAH4AQ0wACWluaGVyaXRlZHEAfgBDTAAHcGFyZW50c3EAfgBDeHEAfgBhc3EAfgBcdXEAfgA+AAAAAHNxAH4AXHVxAH4APgAAAABzcQB+AFx1cgARW0x4c2J0aS5hcGkuVHlwZTt0/6Vae/npQQIAAHhwAAAAA3NyABR4c2J0aS5hcGkuUHJvamVjdGlvbvPSjVTpRaQtAgACTAACaWRxAH4ADUwABnByZWZpeHQAFkx4c2J0aS9hcGkvU2ltcGxlVHlwZTt4cQB+AGB0AAlCYXNlQ2xhc3NzcgATeHNidGkuYXBpLlNpbmdsZXRvbvynX/jPVuRGAgABTAAEcGF0aHQAEEx4c2J0aS9hcGkvUGF0aDt4cQB+AGBzcgAOeHNidGkuYXBpLlBhdGibPVwIzqUnhAIAAVsACmNvbXBvbmVudHN0ABpbTHhzYnRpL2FwaS9QYXRoQ29tcG9uZW50O3hwdXIAGltMeHNidGkuYXBpLlBhdGhDb21wb25lbnQ7Q9oJdC1nFnQCAAB4cAAAAARzcgAMeHNidGkuYXBpLklkmDJsizdTxEACAAFMAAJpZHEAfgANeHIAF3hzYnRpLmFwaS5QYXRoQ29tcG9uZW50X5oiWy6Gn7wCAAB4cHQAAmlvc3EAfgB5dAAGZ2l0aHVic3EAfgB5dAAGbWFyb3B1c3IADnhzYnRpLmFwaS5UaGlz2wntpsxaQFwCAAB4cQB+AHpzcQB+AG10AAZPYmplY3RzcQB+AHFzcQB+AHR1cQB+AHcAAAADc3EAfgB5dAAEamF2YXNxAH4AeXQABGxhbmdxAH4AgnNxAH4AbXQAA0FueXNxAH4AcXNxAH4AdHVxAH4AdwAAAAJzcQB+AHl0AAVzY2FsYXEAfgCCdXIAFFtMeHNidGkuYXBpLlBhY2thZ2U7WxMZN3CnJ6ECAAB4cAAAAANzcgAReHNidGkuYXBpLlBhY2thZ2V+WY/2rs45WAIAAUwABG5hbWVxAH4ADXhwdAAQaW8uZ2l0aHViLm1hcm9wdXNxAH4AlXQAAmlvc3EAfgCVdAAJaW8uZ2l0aHVic3IAFXhzYnRpLmFwaS5Db21waWxhdGlvbu364MNq6KBCAgACSgAJc3RhcnRUaW1lWwAHb3V0cHV0c3QAGltMeHNidGkvYXBpL091dHB1dFNldHRpbmc7eHAAAAF7lNdpOHVyABpbTHhzYnRpLmFwaS5PdXRwdXRTZXR0aW5nO39qwvOnh6VCAgAAeHAAAAABc3IAF3hzYnRpLmFwaS5PdXRwdXRTZXR0aW5netmaR3T7HXsCAAJMAA9vdXRwdXREaXJlY3RvcnlxAH4ADUwAD3NvdXJjZURpcmVjdG9yeXEAfgANeHB0AHMvVXNlcnMvbWFyb3B1L1JlcG9zaXRvcmllcy9wcmVkaWN0aXZlLXRlc3RpbmcvYmluL3Rlc3RzL3Jlc291cmNlcy9qYXZhLWNsYXNzLXRlc3QtcHJvamVjdC90YXJnZXQvc2NhbGEtMi4xMi9jbGFzc2VzdAABL3VyAAJbQqzzF/gGCFTgAgAAeHAAAAAUAcbPwtaKVf5OPkI/B5RhbuCMiQI=
source infos:
2 items
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/MainClassSuite.scala -> 
AAAAAAAAAAA=
/Users/maropu/Repositories/predictive-testing/bin/tests/resources/java-class-test-project/src/test/scala/io/github/maropu/TestClassSuite.scala -> 
AAAAAAAAAAA=
compilations:
1 items
0 -> rO0ABXNyABV4c2J0aS5hcGkuQ29tcGlsYXRpb27t+uDDauigQgIAAkoACXN0YXJ0VGltZVsAB291dHB1dHN0ABpbTHhzYnRpL2FwaS9PdXRwdXRTZXR0aW5nO3hwAAABe5TXbLR1cgAaW0x4c2J0aS5hcGkuT3V0cHV0U2V0dGluZzt/asLzp4elQgIAAHhwAAAAAXNyABd4c2J0aS5hcGkuT3V0cHV0U2V0dGluZ3rZmkd0+x17AgACTAAPb3V0cHV0RGlyZWN0b3J5dAASTGphdmEvbGFuZy9TdHJpbmc7TAAPc291cmNlRGlyZWN0b3J5cQB+AAZ4cHQAeC9Vc2Vycy9tYXJvcHUvUmVwb3NpdG9yaWVzL3ByZWRpY3RpdmUtdGVzdGluZy9iaW4vdGVzdHMvcmVzb3VyY2VzL2phdmEtY2xhc3MtdGVzdC1wcm9qZWN0L3RhcmdldC9zY2FsYS0yLjEyL3Rlc3QtY2xhc3Nlc3QAAS8=
